# Lesson 1: Overview of Blockchains

## Why is This Topic Important?

Many blockchains are presented based on their use case, e.g. Bitcoin as money or Ethereum as a smart contract platform. Participants will need a mental model of blockchain as a state machine to understand parachains.

This module should set students up for effective deep dives on BABE, GRANDPA, Staking, light clients, and Polkadot/parachain architecture.

## Core Ideas to Convey

- State machine basics
	- Simple state machines and redundancy
	- Fault tolerance in distributed systems
	- How distributed state machines advance
- Framework of Blockchain
    - What does a blockchain provide? What is a blockchain solving?
    - Neat overview of what problem blockchains solve?
    - Cryptography Don't have to trust the conduit to haev a reasonable expectation of privacy or of the origin of a message.
    - Blockchain provides a service: don't need to trust a party to have guarantees.
    - What is the service? What are the guarantees
    - Service
        - Shared computational resource
        - State machine
        - Many different parties who don't trust each other can interact
        - Logic is executed correctly
        - After some point, there is a very real expectation that it will not revert that state transition (append-only?)
        - Regardless of who you are, you have access to this machine- open access
    - Without intermediaries
        - Permissionless
        - Decentralized
        - Credible expectations of privacy and authenticity

- What are the nature of the solutions to these needs? 
    - Anatomy of a Blockchain
        - Cryptographic Linked List (AKA Chained Blocks)
            - Each block has info coming in from external environment
            - Packets of information with zero or more signatures attached: we call these "Transactions"
        - **Axis 1:** Consensus Algorithms (How to 1) add blocks and 2) decide whether a block has been irrevertibly added?)
            - Consensus algorithm
            - 1 and 2 are combined in some algos and not in others
        - **Axis 2:** State Transition Funcion
            - Bitcoin: Spent output means that the output can no longer be spent again
            - Ethereum and Polkadot: State at the beginning of the block, at the end there is a deterministic alteration to a new state.
            - Polkadot:
How do we come to a consensus about what a chain actually is? What are our 'service' guarantees
        - Whatever the accepted rules are for participation, they will be respected by the system.
        - Service will not be interrupted.
        - Respect the business logic 
        - No systemic discrimination against the rules of the protocol
            - There could be rules that are necessary to provide the elements of service
            - Censorship-resistant
        - Two aspects of the service:
            - Liveness- always adding more transactions 
                - When will a transaction be 'locked in' (and never reverted)
                - Bunch of participants in this multi-agent system who must determine what happens
            - Agreement on what's already been decided: Shared history 
                - Two people will never have conflicting information and disagree. One might have MORE information, but the other will never believe that a different scenario is true.
    - Bitcoin
    - Smart Contract
    - Namecoin
- How does it actually work- trust without intermediaries?
    - Consensus Algorithms
        - Bitcoin (Nakomoto consensus/PoW)
            - PoW = Proof of Waste!
        - Proof of Authority (PoA)
            - Byzantine Agreement
            - Trust specific authorities to make the decisions
            - We want authorities that have stake in the system
            - Who gets to participate
                - PoW says everyone (weighted by hash power)
                - Requires special equipment, which is expensive
                - PoA says some finite set of authorities make decisions
        - Proof of Stake (PoS)
            - Longest chain PoS
            - PoS is an overloaded term; it might better be described as "Proof of Tokens"
            - Common security model; it continues   
        - *Point of Confusion*: BABE, Tendermint, GRANDPA could also known as 'consensus algorithms'; 
                - Which people are involved, how we get them involved.
        (history in academia and how it's used in Blockchain) 
        - Individual consensus mechanisms that have PoS in their name
        - NPoS: 
            - Staking
            - Rewarding
            - Balance Retention
            - Underlying Block Production
            - Finality Gadget
            - Nakomoto Consensus
            - Derivative Consensus (Parachain). derivative of a relay chain's finality system
    - State machine
- Consensus history
	- Proof of Work 
	- Byzantine Agreement

- Timeline of Blockchain Innovations
    - Bitcoin/Nakomoto
        - Consensus: PoW
        - State Transition Function: 
            - Crack shar-256 hashing
    - Namecoin
        - Consensus:
        - State Transition Function:
    - NXT?
        - Consensus: Proof of Stake (but terrible)
        - State Transition Function:
    - Ethereum
        - Consensus:
        - State Transition Function: 
    - Polkadot
        - Consensus: BABE and GRANDPA (BABE is based on Proas)
        - State Transition Function:
    - Solana
        - Consensus: AURA
        - State Transition Function:
    - Cosmos
        - Consensus: Tendermint
        - State Transition Function: 
    - Avalanche {[reference to blog comparison](https://medium.com/@arikan/a-comparison-of-heterogeneous-blockchain-networks-4bf7ff2fe279) to Polkadot and Cosmos}
        - Consensus: 
        - State Transition Function: 
    -  ETH 2
        - Consensus: Casper/LMD/F50
        - State Transition Function:
    - DAGs...? (Hedera Hashgrpah, IOTA, ...)
        - Consensus: Casper/LMD/F50
        - State Transition Function:
    - Cardano
        - Consensus: Ouroboros PFT/AURA
        - State Transition Function:

**Substrate was created to solve the problem of every blockchain being isolated from one another**

- Open, distributed state machines
	- How to select participants
	- How to advance state
	- How to agree on conflicting state
- Security
	- Breaking consensus
	- Various forms of punishment
	- Security dilution
- Polkadot
	- NPoS
	- Aura, BABE, SASSAFRASS
	- GRANDPA
	- Slashing
- Parachains
	- Block authorship
	- Finality

## Learning Outcome

By the end of this lesson, learners will be able to architect a consensus system with isolated processes and articulate the tradeoffs they made.

## Learning Objectives

- Classify different consensus algorithms.
- Compare assumptions used in different algorithms.
- Deconstruct a given parachain's consensus into its various components.
- Articulate the tradeoffs of isolated vs. shared security.

## Prerequisite Knowledge or Skills

- Hash functions
- Digital signatures
- Cryptographic linked lists
- Basic economics

## Activities and Exercises

These activities can be done in the language of the student's choice:

- Write a blockchain that advances. It does not need an interface (e.g. to submit transactions), but it should maintain some state (e.g. a timestamp) and should produce new blocks (they can be empty, but the headers would of course be unique).
- Write a fork choice rule.

## References

- [Alternativen zum Krypto-Mining: Warum Polkadot auf Proof-of-Stake setzt](https://www.heise.de/hintergrund/Alternativen-zum-Krypto-Mining-Warum-Polkadot-auf-Proof-of-Stake-setzt-6199450.html?seite=all) ([English version](https://drive.google.com/file/d/171hN-f3GINL2r3Yv-78XXKfSd6Sg68Nj/view?usp=sharing))
- Consensus Series: Parts [1](https://polkadot.network/polkadot-consensus-part-1-introduction/), [2](https://polkadot.network/polkadot-consensus-part-2-grandpa/), [3](https://polkadot.network/blog/polkadot-consensus-part-3-babe/), and [4](https://polkadot.network/blog/polkadot-consensus-part-4-security/)
- [Consensus in Polkadot (Presentation)](https://docs.google.com/presentation/d/1pTUFqdkyRa1C5mfzL-isyYGKqaFWdUAZraODO_WkSHs/edit#slide=id.g58f1ea59d2_0_6)
